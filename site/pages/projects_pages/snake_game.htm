<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Snake Game - College Site</title>

        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Open+Sans">
        <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Pacifico">
        <link rel="stylesheet" type="text/css" href="/site/resources/css/font-awesome-4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" type="text/css" href="/site/resources/css/web_structure.css"/>
        <link rel="stylesheet" type="text/css" href="/site/pages/page_themes/home.css"/>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    </head>
    <body>
        <div id="page" class="container">
            <? renderPartial('pages/page_headers/home') ?>
            <div id="content">
                <div class="row">
                    <div class="offset-a4-1 col-a4-10">
                        <div class="offset-a2-2 col-a2-8">
                            <div class="row">
                                <div id="breadcrumbs">
                                    <ul>
                                        <li class="breadcrumbs-crumb">
                                            <a href="/home">Home</a>
                                            <i class="fa fa-angle-right" aria-hidden="true"></i>
                                        </li>
                                        <li class="breadcrumbs-crumb">
                                            <a href="/projects">Projects</a>
                                            <i class="fa fa-angle-right" aria-hidden="true"></i>
                                        </li>
                                        <li class="breadcrumbs-active">Snake Game</li>
                                    </ul>
                                </div>
                            </div>

                            <div class="col-a3-12">
                                <div class="panel">
                                    <div class="panel-header">
                                        <h1 class="pl-20">Snake Game</h1>
                                    </div>

                                    <style>
                                        #snake-canvas {
                                            /* width: 50%;  */
                                            /* height: 400px;  */
                                            max-width: 100%;
                                            border: 1px solid #ddd; 
                                            box-shadow: 0px 0px 4px -2px #000;
                                        }

                                        #snake-canvas:active {
                                            border: 1px solid #000; 
                                        }
                                    </style>
                                    
                                    <div class="row">
                                        <canvas id="snake-canvas" class="mb-10" width="400" height="400" />
                                    </div>
                                    <div class="row">
                                        <p class="pr-20">Score: <span id="snake-score">0</span></p>
                                        <p class="pr-20">High Score: <span id="snake-highscore">0</span></p>
                                        <p>Speed: <span id="snake-speed">0</span></p>
                                        <script>
                                            $('#snake-canvas').ready(function() {
                                                var canvas = document.getElementById("snake-canvas");
                                                var ctx = canvas.getContext('2d');

                                                var board_size = {x:20,y:20};
                                                var snake = [{x:Math.round(board_size.x * 0.5),y:Math.round(board_size.y * 0.5)},{x:0,y:0},{x:0,y:0},{x:0,y:0}];
                                                var snake_draw = [];//[].concat(snake);
                                                var food = [{x:10,y:20}];
                                                var snake_direction = {x:0,y:0};
                                                var scale = {x:canvas.width / board_size.x,y:canvas.height / board_size.y};
                                                var keys = [];

                                                var score = 0;
                                                var highscore = 0;
                                                var speed = 6000;
                                                var gameover = false;
                                                var pause = false;

                                                var last_update = 0;
                                                var last_draw = 0;

                                                generate_food(0);

                                                $('#snake-score').html(score);
                                                $('#snake-highscore').html(highscore);
                                                //$('#snake-speed').html(Math.round(speed));

                                                window.addEventListener("keydown",
                                                    function(e){
                                                        keys[e.keyCode] = true;
                                                    },
                                                false);

                                                window.addEventListener("keyup",
                                                    function(e){
                                                        keys[e.keyCode] = false;
                                                    },
                                                false);

                                                $(window).click(function() {
                                                    pause = true;
                                                });

                                                $('#snake-canvas').click(function(e) {
                                                    pause = false;
                                                    e.stopPropagation();
                                                });

                                                function restart()
                                                {
                                                    snake = [{x:Math.round(board_size.x * 0.5),y:Math.round(board_size.y * 0.5)},{x:0,y:0},{x:0,y:0},{x:0,y:0}];
                                                    //snake_draw = snake.slice();
                                                    food = [{x:10,y:20}];
                                                    snake_direction = {x:0,y:0};
                                                    score = 0;
                                                    speed = 6;
                                                    gameover = false;

                                                    generate_food(0);

                                                    $('#snake-score').html(score);
                                                    $('#snake-highscore').html(highscore);
                                                    //$('#snake-speed').html(Math.round(speed));
                                                }

                                                function generate_food(index)
                                                {
                                                    var position = {x:0,y:0};
                                                    var valid_position = false;
                                                    var max_tries = 500;

                                                    console.log('generate_food');

                                                    while (!valid_position && max_tries > 0)
                                                    {
                                                        position = {x: Math.floor(Math.random() * board_size.x), y: Math.floor(Math.random() * board_size.y)};

                                                        if (!inArray(position, snake))
                                                            valid_position = true;

                                                        max_tries--;
                                                    }

                                                    food[index] = position;
                                                }
                                                
                                                function input()
                                                {
                                                    if (!gameover)
                                                    {
                                                        if(keys[65] && snake_direction.x != 1) 
                                                            snake_direction = {x:-1,y:0};
                                                        if(keys[68] && snake_direction.x != -1) 
                                                            snake_direction = {x:1,y:0};
                                                        if(keys[87] && snake_direction.y != 1) 
                                                            snake_direction = {x:0,y:-1};
                                                        if(keys[83] && snake_direction.y != -1) 
                                                            snake_direction = {x:0,y:1};

                                                        var new_snake_direction = getPathToFood(1);
                                                        //if (!(new_snake_direction.x == 0 && new_snake_direction.y == 0))
                                                            snake_direction = {x:new_snake_direction.x,y:new_snake_direction.y};
                                                    }
                                                    else if(keys[27]) 
                                                        restart();
                                                }

                                                var interval = 0;
                                                function update(cur_time, dt)
                                                {
                                                    if (!gameover && !pause)
                                                    {
                                                        if (interval < 0)
                                                        {
                                                            $('#snake-speed').html(interval);
                                                            interval += (1 / speed);
                                                            last_update = cur_time;

                                                            for (var i = snake.length - 1; i >= 0; i--) {
                                                                var cell = snake[i];

                                                                snake_draw[i] = {x:cell.x,y:cell.y};
       
                                                                if (i != 0)
                                                                {
                                                                    cell.x = snake[i - 1].x;
                                                                    cell.y = snake[i - 1].y;
                                                                }
                                                                else
                                                                {
                                                                    for (var f = 0; f < food.length; f++) {
                                                                        var food_cell = food[f];
                                                                        
                                                                        if (food_cell.x == cell.x && food_cell.y == cell.y)
                                                                        {
                                                                            //food[f] = {x: Math.floor(Math.random() * board_size.x), y: Math.floor(Math.random() * board_size.y)};
                                                                            generate_food(0);
                                                                            snake.push({x:snake[0].x,y:snake[0].y});
                                                                            //snake_draw = snake.slice();

                                                                            score += 1;
                                                                            $('#snake-score').html(score);
                                                                            speed += 0.1;
                                                                            //$('#snake-speed').html(Math.round(speed));

                                                                            if (score > highscore)
                                                                            {
                                                                                highscore = score;
                                                                                $('#snake-highscore').html(highscore);
                                                                            }
                                                                        }
                                                                    }

                                                                    cell.x += snake_direction.x;
                                                                    cell.y += snake_direction.y;

                                                                    if (cell.x >= board_size.x)
                                                                        cell.x = 0;
                                                                    else if (cell.x < 0)
                                                                        cell.x = board_size.x;

                                                                    if (cell.y >= board_size.y)
                                                                        cell.y = 0;
                                                                    else if (cell.y < 0)
                                                                        cell.y = board_size.y;

                                                                    snake.forEach(function(snake_cell) {
                                                                        if (!(snake_direction.x == 0 && snake_direction.y == 0))
                                                                            if (snake_cell != cell && snake_cell.x == cell.x && snake_cell.y == cell.y)
                                                                                gameover = true;
                                                                    }, this);
                                                                }
                                                            }
                                                        }
                                                        else
                                                            interval -= dt;
                                                    }
                                                }

                                                function draw(cur_time, dt)
                                                {
                                                    last_draw = cur_time;
                                                    
                                                    ctx.clearRect(0, 0, canvas.width, canvas.height);

                                                    if (!gameover)
                                                    {
                                                        if (!pause)
                                                        {
                                                            ctx.textAlign="start"; 
                                                            ctx.font = '12px Arial';
                                                            ctx.fillStyle="#444";
                                                            ctx.fillText(Math.round((1 / dt) * 100) * 0.01 + ' fps',10,20);

                                                            ctx.fillStyle="#44AA44";
                                                            ctx.beginPath();
                                                            food.forEach(function(food_cell) {
                                                                ctx.arc( food_cell.x * scale.x + (scale.x * 0.5), food_cell.y * scale.y + (scale.y * 0.6), scale.x * 0.4, 0, 2*Math.PI);
                                                                ctx.fill();
                                                            }, this);
                                                            ctx.closePath();
                                                            
                                                            ctx.fillStyle="#444";
                                                            ctx.strokeStyle="#aaa";
                                                            for (var i = 0; i < snake.length; i++) {
                                                                if (snake_draw[i] == null)
                                                                    snake_draw[i] = {x:0,y:0};
                                                                
                                                                var delta_t = (1 / speed);
                                                                var progress = ((last_draw - last_update) / delta_t) * 0.001;

                                                                cell = snake[i];
                                                                cell_draw = snake_draw[i];

                                                                ctx.beginPath();
                                                                ctx.arc( (cell_draw.x + ( (cell.x - cell_draw.x) * progress )) * scale.x + (scale.x * 0.5), (cell_draw.y + ( (cell.y - cell_draw.y) * progress )) * scale.y + (scale.y * 0.5), scale.x * 0.5, 0, 2*Math.PI);
                                                                ctx.fill();
                                                                ctx.stroke();
                                                                ctx.closePath();
                                                            }

                                                            ctx.textAlign="start"; 
                                                            ctx.font = '12px Arial';
                                                            ctx.fillStyle="#444";
                                                            ctx.fillText(snake_direction.x + ',' + snake_direction.y,10,60);

                                                            // var cells = getAdjacentCells(snake[0], false)

                                                            // ctx.fillStyle="#00f";
                                                            // cells.forEach(function(cell) {
                                                            //     ctx.beginPath();
                                                            //     ctx.rect(cell.x * scale.x, cell.y * scale.y, scale.x - 1,scale.y - 1);
                                                            //     ctx.fill();
                                                            //     ctx.closePath();
                                                            // }, this);

                                                            // ctx.fillStyle="#f00";                                      
                                                            // ctx.beginPath();
                                                            // snake.forEach(function(cell) {
                                                            //     ctx.rect(cell.x * scale.x + 2, cell.y * scale.y + 2, scale.x - 5,scale.y - 5);
                                                            //     ctx.fill();
                                                            // }, this);
                                                            // ctx.closePath();
                                                        }
                                                        else
                                                        {
                                                            ctx.fillStyle="#444";
                                                            ctx.textAlign="center"; 
                                                            ctx.font = '24px Arial';
                                                            ctx.fillText('Paused',200,200);
                                                            ctx.font = '14px Arial';
                                                            ctx.fillText('(Click to unpause)',200,220);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        ctx.fillStyle="#444";
                                                        ctx.textAlign="center"; 
                                                        ctx.font = '24px Arial';
                                                        ctx.fillText('Game Over!',200,200);
                                                        ctx.font = '14px Arial';
                                                        ctx.fillText('(Press ESC to start a new game)',200,220);
                                                    }
                                                }

                                                function getAdjacentCells(position, shouldWrap)
                                                {
                                                    var adjacentCells = [];

                                                    if (position.x > 0)
                                                        adjacentCells.push({x:position.x - 1, y:position.y});
                                                    else if (shouldWrap)
                                                        adjacentCells.push({x:board_size.x - 1, y:position.y});

                                                    if (position.x < board_size.x - 1)
                                                        adjacentCells.push({x:position.x + 1, y:position.y});
                                                    else if (shouldWrap)
                                                        adjacentCells.push({x:0, y:position.y});

                                                    if (position.y > 0)
                                                        adjacentCells.push({x:position.x, y:position.y - 1});
                                                    else if (shouldWrap)
                                                        adjacentCells.push({x:position.x, y:board_size.y - 1});

                                                    if (position.y < board_size.y - 1)
                                                        adjacentCells.push({x:position.x, y:position.y + 1});
                                                    else if (shouldWrap)
                                                        adjacentCells.push({x:position.x, y:0});

                                                    return adjacentCells;
                                                }

                                                function inArray(position, array)
                                                {
                                                    for (var i = 0; i < array.length; i++) {
                                                        var cell = array[i];
                                                        if (position.x == cell.x && position.y == cell.y)
                                                            return cell;
                                                    }
                                                    return false;
                                                }

                                                function getPathToFood()
                                                {
                                                    var navmesh = [];
                                                    var scanning = [];
                                                    var scanned = [];
                                                    var path = [];
                                                    var start = {x:0,y:0};
                                                    var end = {x:0,y:0};
                                                    var foundTarget = false;
                                                    var foundOrigin = false;
                                                    var maxSearch = 500;

                                                    end = {x:food[0].x,y:food[0].y};

                                                    for (var i = 0; i < snake.length; i++) {
                                                        var cell = snake[i];
                                                        if (i != 0)
                                                            navmesh.push({x:cell.x,y:cell.y});
                                                        else
                                                            start = {x:cell.x,y:cell.y,cost:0};
                                                    }

                                                    scanning.push(start);

                                                    while (maxSearch > 0 && !foundTarget) {

                                                        var cell = scanning.shift();
                                                        if (cell)
                                                        {
                                                            scanned.push(cell);

                                                            if (cell.x == food[0].x && cell.y == food[0].y)
                                                                foundTarget = true;
                                                            else
                                                            {
                                                                var adjacentCells = getAdjacentCells(cell, true);
                                                                adjacentCells.forEach(function(adj_cell) {
                                                                    if (!inArray(adj_cell, scanned) && !inArray(adj_cell, scanning) && !inArray(adj_cell, snake))
                                                                        scanning.push({x:adj_cell.x, y:adj_cell.y, cost:cell.cost + 1});
                                                                }, this);
                                                            }
                                                        }

                                                        maxSearch--;
                                                    }

                                                    maxSearch = 100;
                                                    if (foundTarget)
                                                    {
                                                        path.push(end);
                                                        while (maxSearch > 0 && !foundOrigin)
                                                        {
                                                            var adj_cells = getAdjacentCells(path[path.length - 1], true);
                                                            var lowestCost = {x:0,y:0,cost: 99999};
                                                            adj_cells.forEach(function(cell) {
                                                                cell = inArray(cell, scanned);
                                                                if (cell.cost < lowestCost.cost)
                                                                    lowestCost = cell;
                                                            }, this);

                                                            path.push(lowestCost);

                                                            if (lowestCost.x == start.x && lowestCost.y == start.y)
                                                                foundOrigin = true;

                                                            maxSearch--;
                                                        }
                                                    }

                                                    scanning.forEach(function(cell) {
                                                        ctx.fillStyle="#f00";                                      
                                                        ctx.beginPath();
                                                        ctx.rect(cell.x * scale.x + 2, cell.y * scale.y + 2, (scale.x - 5) * (1 / (cell.cost * 0.5)),scale.y - 5);
                                                        ctx.fill();
                                                        ctx.closePath();
                                                    }, this);

                                                    scanned.forEach(function(cell) {
                                                        ctx.fillStyle="#0f0";                                      
                                                        ctx.beginPath();
                                                        ctx.rect(cell.x * scale.x + 4, cell.y * scale.y + 4, scale.x - 9,scale.y - 9);
                                                        ctx.fill();
                                                        ctx.closePath();
                                                    }, this);

                                                    path.forEach(function(cell) {
                                                        ctx.fillStyle="#00f";                                      
                                                        ctx.beginPath();
                                                        ctx.rect(cell.x * scale.x + 4, cell.y * scale.y + 4, scale.x - 9,scale.y - 9);
                                                        ctx.fill();
                                                        ctx.closePath();
                                                    }, this);

                                                    //ctx.textAlign="start"; 
                                                    //ctx.font = '12px Arial';
                                                    //ctx.fillStyle="#444";
                                                    //ctx.fillText((path[path.length - 2].x - path[path.length - 1].x) + ',' + (path[path.length - 2].y - path[path.length - 1].y),10,40);

                                                    if (path.length > 1)
                                                        return {x:(path[path.length - 2].x - path[path.length - 1].x),y:(path[path.length - 2].y - path[path.length - 1].y)};
                                                    else
                                                        return {x:0,y:0};
                                                }

                                                var last_time = 0;
                                                function loop(cur_time)
                                                {
                                                    var dt = (cur_time - last_time) * 0.001;
                                                    last_time = cur_time;

                                                    input();
                                                    update(cur_time, dt);
                                                    draw(cur_time, dt);

                                                    getPathToFood();

                                                    window.requestAnimationFrame(loop);
                                                }
                                                window.requestAnimationFrame(loop);
                                            });
                                        </script>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <? renderPartial('pages/page_footers/home') ?>
        </div>
    </body>
</html>
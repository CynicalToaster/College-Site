<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Ajax Project - College Site</title>

        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Open+Sans">
        <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Pacifico">
        <link rel="stylesheet" type="text/css" href="/site/resources/css/font-awesome-4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" type="text/css" href="/site/resources/css/web_structure.css"/>
        <link rel="stylesheet" type="text/css" href="/site/pages/page_themes/home.css"/>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    </head>
    <body>
        <div id="page" class="container">
            <? renderPartial('pages/page_headers/home') ?>
            <div id="content">
                <div class="row">
                    <div class="offset-a4-1 col-a4-10">
                        <div class="offset-a2-2 col-a2-8">

                            <div class="row">
                                <div id="breadcrumbs">
                                    <ul>
                                        <li class="breadcrumbs-crumb">
                                            <a href="/home">Home</a>
                                            <i class="fa fa-angle-right" aria-hidden="true"></i>
                                        </li>
                                        <li class="breadcrumbs-crumb">
                                            <a href="/projects">Projects</a>
                                            <i class="fa fa-angle-right" aria-hidden="true"></i>
                                        </li>
                                        <li class="breadcrumbs-active">Loading Wheel 2</li>
                                    </ul>
                                </div>
                            </div>

                            <div class="col-a3-12">
                                <div class="panel">
                                    <div class="panel-header">
                                        <h1 class="pl-20">Loading Wheel 2</h1>
                                    </div>
                                    <canvas id="canvas" class="mb-10" width="200" height="200" style="border:1px solid #000000; width: 200px; height: 200px;"></canvas>
                                    <script>
                                        var c = document.getElementById("canvas");
                                        var ctx = c.getContext("2d");

                                        function drawArcTrail(ctx, startAngle, endAngle, radius, width, pos)
                                        {
                                            ctx.beginPath();
                                            ctx.arc(pos.x,pos.y,radius,startAngle,endAngle);
                                            ctx.lineWidth = width;
                                            ctx.stroke();
                                            ctx.closePath();

                                            ctx.beginPath();
                                            ctx.arc(pos.x + Math.cos(startAngle) * radius,pos.y + Math.sin(startAngle) * radius,width * 0.5,0,2*Math.PI);
                                            ctx.fill();
                                            ctx.closePath();

                                            ctx.beginPath();
                                            ctx.arc(pos.x + Math.cos(endAngle) * radius,pos.y + Math.sin(endAngle) * radius,width * 0.5,0,2*Math.PI);
                                            ctx.fill();
                                            ctx.closePath();
                                        }

                                        function drawBlade(angle, pos)
                                        {
                                            ctx.save();
                                                ctx.translate(pos.x, pos.y);
                                                ctx.rotate(angle);

                                                ctx.beginPath();
                                                ctx.arc(5,0,2,0,2*Math.PI);
                                                ctx.fill();
                                                ctx.closePath();

                                                ctx.beginPath();
                                                ctx.arc(50,0,2,0,2*Math.PI);
                                                ctx.fill();
                                                ctx.closePath();

                                                ctx.beginPath();
                                                ctx.moveTo(50, -2);
                                                ctx.lineTo(50, 2);
                                                ctx.lineTo(15, 4);
                                                ctx.lineTo(5, 2);
                                                ctx.lineTo(5, -2);
                                                ctx.lineTo(15, -4);
                                                ctx.closePath();
                                                ctx.fill();
                                            ctx.restore();
                                        }

                                        function clamp(val, min, max)
                                        {
                                            if (val < min)
                                                return min;
                                            else if (val > max)
                                                return max;
                                            else
                                                return val;
                                        }

                                        function min(val, min)
                                        {
                                            if (val < min)
                                                return min;
                                            else
                                                return val;
                                        }

                                        function max(val, max)
                                        {
                                            if (val > max)
                                                return max;
                                            else
                                                return val;
                                        }

                                        function createLayer(radius, delay, offset, colour)
                                        {
                                            return {
                                                colour: colour,
                                                offset: offset,
                                                delay: delay,
                                                cur_delay: 0,
                                                radius: radius,
                                                trails: []
                                            }
                                        }


                                        var a = 0;

                                        var trailLayers = [];
                                        trailLayers.push(createLayer(50, 0.6, 0, '#e90646'));
                                        trailLayers.push(createLayer(46, 0.8, 0, '#e90646'));
                                        trailLayers.push(createLayer(42, 1.0, 0, '#e90646'));
                                        trailLayers.push(createLayer(38, 1.2, 0, '#e90646'));
                                        trailLayers.push(createLayer(34, 1.4, 0, '#e90646'));

                                        trailLayers.push(createLayer(30, 5, 0, '#e90646'));
                                        trailLayers.push(createLayer(26, 5, 0, '#e90646'));
                                        trailLayers.push(createLayer(22, 5, 0, '#e90646'));
                                        trailLayers.push(createLayer(18, 5, 0, '#e90646'));


                                        trailLayers.push(createLayer(50, 0.6, 0.667, '#fde253'));
                                        trailLayers.push(createLayer(46, 0.8, 0.667, '#fde253'));
                                        trailLayers.push(createLayer(42, 1.0, 0.667, '#fde253'));
                                        trailLayers.push(createLayer(38, 1.2, 0.667, '#fde253'));
                                        trailLayers.push(createLayer(34, 1.4, 0.667, '#fde253'));

                                        trailLayers.push(createLayer(30, 5, 0.667, '#fde253'));
                                        trailLayers.push(createLayer(26, 5, 0.667, '#fde253'));
                                        trailLayers.push(createLayer(22, 5, 0.667, '#fde253'));
                                        trailLayers.push(createLayer(18, 5, 0.667, '#fde253'));


                                        trailLayers.push(createLayer(50, 0.6, 1.333, '#028aae'));
                                        trailLayers.push(createLayer(46, 0.8, 1.333, '#028aae'));
                                        trailLayers.push(createLayer(42, 1.0, 1.333, '#028aae'));
                                        trailLayers.push(createLayer(38, 1.2, 1.333, '#028aae'));
                                        trailLayers.push(createLayer(34, 1.4, 1.333, '#028aae'));

                                        trailLayers.push(createLayer(30, 5, 1.333, '#028aae'));
                                        trailLayers.push(createLayer(26, 5, 1.333, '#028aae'));
                                        trailLayers.push(createLayer(22, 5, 1.333, '#028aae'));
                                        trailLayers.push(createLayer(18, 5, 1.333, '#028aae'));

                                        var last_time = 0;
                                        function loop(cur_time)
                                        {
                                            var dt = (cur_time - last_time) * 0.001;
                                            last_time = cur_time;

                                            ctx.clearRect(0, 0, canvas.width, canvas.height);

                                            ctx.fillStyle="grey";
                                            ctx.strokeStyle="grey";

                                            a -= 0.8 * dt;
                                            
                                            for (l = 0; l < trailLayers.length; l++)
                                            {
                                                var layer = trailLayers[l];

                                                if (layer.cur_delay >= 0)
                                                {
                                                    layer.cur_delay -= dt;

                                                    if (layer.cur_delay <= 0)
                                                    {
                                                        var ranLength = (Math.random() * 0.1 + 0.1);
                                                        layer.cur_delay = (ranLength * layer.delay);
                                                        layer.trails.push({
                                                            start: 0,
                                                            length: ranLength + 0.1
                                                        });
                                                    }
                                                }

                                                for (i = 0; i < layer.trails.length; i++)
                                                {
                                                    var trail = layer.trails[i];
                                                    if (trail.length > 0)
                                                    {
                                                        trail.start += 1 * dt;
                                                        trail.length -= 0.5 * dt;
                                                    }
                                                    else
                                                    {
                                                        layer.trails.splice(i, 1);
                                                        //cur_delay = delay;
                                                    }

                                                    ctx.fillStyle = layer.colour;
                                                    ctx.strokeStyle = layer.colour;
                                                    drawArcTrail(ctx, (layer.offset + a + min(trail.start - min(trail.length, 0), 0)) * Math.PI, (layer.offset + a + trail.start) * Math.PI, layer.radius, 2, {x:100,y:100});
                                                }

                                            }

                                            ctx.fillStyle = '#e90646';
                                            ctx.strokeStyle = '#e90646';
                                            drawBlade(a * Math.PI, {x:100,y:100});

                                            ctx.fillStyle = '#fde253';
                                            ctx.strokeStyle = '#fde253';
                                            drawBlade((a + 0.667) * Math.PI, {x:100,y:100});

                                            ctx.fillStyle = '#028aae';
                                            ctx.strokeStyle = '#028aae';
                                            drawBlade((a + 1.333) * Math.PI, {x:100,y:100});

                                            ctx.fillStyle="#444";
                                            ctx.textAlign="left"; 
                                            ctx.font = '12px Arial';
                                            ctx.fillText(Math.round((1 / dt) * 100) * 0.01,0,10);

                                            window.requestAnimationFrame(loop);
                                        }
                                        window.requestAnimationFrame(loop);
                                    </script>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <? renderPartial('pages/page_footers/home') ?>
        </div>
    </body>
</html>